

CREATE TABLE PUBLIC.EVENT
(
    ID BIGINT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    YEAR INTEGER NOT NULL DEFAULT 0,
    CURRENT BOOLEAN NOT NULL
);

CREATE TABLE PUBLIC.INTEREST
(
    NAME VARCHAR(50) PRIMARY KEY NOT NULL
);

CREATE TABLE PUBLIC.MEMBER
(
    DTYPE VARCHAR(31) NOT NULL,
    ID BIGINT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    COMPANY VARCHAR(100),
    EMAIL VARCHAR(250),
    FIRSTNAME VARCHAR(100),
    LASTNAME VARCHAR(100),
    LOGIN VARCHAR(100) NOT NULL,
    LONG_DESCRIPTION VARCHAR(255),
    NB_CONSULTS BIGINT NOT NULL,
    PUBLIC_PROFILE BOOLEAN NOT NULL,
    REGISTERED_AT BINARY(255),
    SHORT_DESCRIPTION VARCHAR(255),
    TICKETING_REGISTERED BOOLEAN,
    LEVEL VARCHAR(255),
    LOGO_URL VARCHAR(250),
    SESSION_TYPE VARCHAR(255)
);

CREATE TABLE MEMBER_EVENTS
(
    MEMBER_ID BIGINT NOT NULL,
    EVENTS_ID BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ID, EVENTS_ID)
);

CREATE TABLE MEMBER_INTERESTS
(
    MEMBER_ID BIGINT NOT NULL,
    INTERESTS_NAME VARCHAR(50) NOT NULL,
    PRIMARY KEY (MEMBER_ID, INTERESTS_NAME)
);

CREATE TABLE SESSION
(
    DTYPE VARCHAR(31) NOT NULL,
    ID BIGINT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    ADDED_AT BINARY(255),
    DESCRIPTION CLOB NOT NULL,
    FEEDBACK BOOLEAN NOT NULL,
    FORMAT VARCHAR(255),
    GUEST BOOLEAN NOT NULL DEFAULT FALSE,
    IDEA_FOR_NOW CLOB,
    LANG VARCHAR(255) NOT NULL,
    LEVEL VARCHAR(20),
    NB_CONSULTS BIGINT NOT NULL,
    MAX_ATTENDEES INT NOT NULL,
    MESSAGE_FOR_STAFF CLOB,
    SUMMARY VARCHAR(250),
    TITLE VARCHAR(100) NOT NULL,
    VALID BOOLEAN NOT NULL,
    EVENT_ID BIGINT NOT NULL,
    SESSION_ACCEPTED BOOLEAN,
    SPEAKER_ID BIGINT NOT NULL
);


CREATE TABLE SESSION_COMMENT
(
    ID BIGINT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    CONTENT CLOB NOT NULL,
    POSTED_AT BINARY(255) NOT NULL,
    PRIVATE BOOLEAN,
    MEMBER_ID BIGINT NOT NULL,
    SESSION_ID BIGINT NOT NULL
);

CREATE TABLE SESSION_INTERESTS
(
    SESSION_ID BIGINT NOT NULL,
    INTERESTS_NAME VARCHAR(50) NOT NULL,
    PRIMARY KEY (SESSION_ID, INTERESTS_NAME)
);

CREATE TABLE SESSION_SPEAKERS
(
    SESSIONS_ID BIGINT NOT NULL,
    SPEAKERS_ID BIGINT NOT NULL,
    PRIMARY KEY (SESSIONS_ID, SPEAKERS_ID)
);
CREATE TABLE SHARED_LINK
(
    ID BIGINT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    URL VARCHAR(250) NOT NULL,
    NAME VARCHAR(50) NOT NULL,
    ORDERNUM INTEGER NOT NULL,
    MEMBER_ID BIGINT NOT NULL
);

CREATE TABLE VOTE
(
    ID BIGINT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    VALUE BOOLEAN NOT NULL,
    MEMBER_ID BIGINT,
    SESSION_ID BIGINT
);

ALTER TABLE MEMBER_EVENTS ADD FOREIGN KEY (EVENTS_ID) REFERENCES EVENT (ID);
ALTER TABLE MEMBER_EVENTS ADD FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (ID);
CREATE INDEX FK_MEMBER_EVENT_INDEX ON MEMBER_EVENTS (EVENTS_ID);

ALTER TABLE MEMBER_INTERESTS ADD FOREIGN KEY (INTERESTS_NAME) REFERENCES INTEREST (NAME);
ALTER TABLE MEMBER_INTERESTS ADD FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (ID);
CREATE INDEX FK_MEMBER_INTERESTS_INDEX ON MEMBER_INTERESTS (INTERESTS_NAME);

ALTER TABLE SESSION ADD FOREIGN KEY (EVENT_ID) REFERENCES EVENT (ID);
ALTER TABLE SESSION ADD FOREIGN KEY (SPEAKER_ID) REFERENCES MEMBER (ID);
CREATE INDEX FK_SESSION_INDEX_A ON SESSION (EVENT_ID);
CREATE INDEX FK_SESSION_INDEX_B ON SESSION (SPEAKER_ID);

ALTER TABLE SESSION_COMMENT ADD FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (ID);
ALTER TABLE SESSION_COMMENT ADD FOREIGN KEY (SESSION_ID) REFERENCES SESSION (ID);
CREATE INDEX FK_SESSION_COMMENT_INDEX_A ON SESSION_COMMENT (MEMBER_ID);
CREATE INDEX FK_SESSION_COMMENT_INDEX_B ON SESSION_COMMENT (SESSION_ID);

ALTER TABLE SESSION_INTERESTS ADD FOREIGN KEY (INTERESTS_NAME) REFERENCES INTEREST (NAME);
ALTER TABLE SESSION_INTERESTS ADD FOREIGN KEY (SESSION_ID) REFERENCES SESSION (ID);
CREATE INDEX FK_SESSION_INTERESTS_INDEX ON SESSION_INTERESTS (INTERESTS_NAME);

ALTER TABLE SESSION_SPEAKERS ADD FOREIGN KEY (SPEAKERS_ID) REFERENCES MEMBER (ID);
ALTER TABLE SESSION_SPEAKERS ADD FOREIGN KEY (SESSIONS_ID) REFERENCES SESSION (ID);
CREATE INDEX FK_SESSION_SPEAKERS_INDEX ON SESSION_SPEAKERS (SPEAKERS_ID);

ALTER TABLE SHARED_LINK ADD FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (ID);
CREATE INDEX FK_SHARED_LINK_INDEX ON SHARED_LINK (MEMBER_ID);

ALTER TABLE VOTE ADD FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (ID);
ALTER TABLE VOTE ADD FOREIGN KEY (SESSION_ID) REFERENCES SESSION (ID);
CREATE INDEX FK_VOTE_INDEX_1 ON VOTE (SESSION_ID);
CREATE INDEX FK_VOTE_INDEX_2 ON VOTE (MEMBER_ID);

